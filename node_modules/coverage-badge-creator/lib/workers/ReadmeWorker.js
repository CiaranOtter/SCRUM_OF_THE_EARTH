"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Readme = void 0;
const BadgeWorker_1 = require("./BadgeWorker");
const Globals_1 = require("../Globals");
const FileUtils_1 = require("../utils/FileUtils");
const StringUtils_1 = require("../utils/StringUtils");
class Readme {
    static prepareData(BadgeStatsObj, urlConfig) {
        this.replacementAttributes = [];
        if (!BadgeStatsObj)
            return this;
        for (const BadgeStatsColumnKey of Object.keys(BadgeStatsObj)) {
            this.replacementAttributes.push({
                pattern: `\\$${BadgeStatsColumnKey}\\$`,
                url: BadgeWorker_1.Badge.create(urlConfig[BadgeStatsColumnKey] || {}, BadgeStatsObj[BadgeStatsColumnKey], BadgeStatsColumnKey),
            });
        }
        return this;
    }
    static insertCov() {
        let file = FileUtils_1.FileUtils.readFile(this.filePath);
        this.replacementAttributes.forEach((util) => {
            const baseUrlPattern = StringUtils_1.StringUtils.replaceString('&PATTERN&', util.pattern, Globals_1.Globals.BADGE_BASE_URL_PATTERN);
            const urlPattern = new RegExp(`(${baseUrlPattern})|(${util.pattern})`, 'gi');
            file = StringUtils_1.StringUtils.replaceString(urlPattern, util.url, file);
        });
        FileUtils_1.FileUtils.writeFile(this.filePath, file);
    }
}
exports.Readme = Readme;
Readme.filePath = Globals_1.Globals.BASE_README_PATH;
